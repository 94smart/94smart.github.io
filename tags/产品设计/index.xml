<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>产品设计 on 移或移不动的互联网</title><link>http://blog.94smart.com/tags/%E4%BA%A7%E5%93%81%E8%AE%BE%E8%AE%A1/</link><description>Recent content in 产品设计 on 移或移不动的互联网</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Thu, 21 Jul 2011 06:20:04 +0000</lastBuildDate><atom:link href="http://blog.94smart.com/tags/%E4%BA%A7%E5%93%81%E8%AE%BE%E8%AE%A1/index.xml" rel="self" type="application/rss+xml"/><item><title>请问你是否经历过这样的产品流程，如何解决的？</title><link>http://blog.94smart.com/posts/1522/</link><pubDate>Thu, 21 Jul 2011 06:20:04 +0000</pubDate><guid>http://blog.94smart.com/posts/1522/</guid><description>来自知乎的问题：请问你是否经历过这样的产品流程，如何解决的？（有图有真相） 存个挡，我在知乎的回答如下： 我主要角色是PM和运营，经历的项目都会延期，立项和产品设计阶段算是比较顺利，BOSS和RD都没太多意见（因为没有多少人会详细看需求文档），开发期就很难讲，各种情况都会出现，最后必然都会延期。 YY下解决方法：
立项时设定明确的目标，尤其是BOSS的目标，且团队所有人必须都明白、认可；不认可的话不如直接退出。 产品设计阶段，PM需求分析要更实际，粒度更合适，保证符合目标，团队所有人都可参与需求迭代。 如果BOSS懂产品，PM就听、想并和RD沟通、执行，用结果证明BOSS的想法对错，不同的BOSS结果不同；如果BOSS强势表达意见，PM只能解释、举例证明，没得商量的就照做，结果不好的话最后就是换公司。 项目需求分析必须设定截止期限，超期需求只能下期加入，BOSS也不例外，做不到这点的不如不做。 项目整体PM都要团结RD，了解RD的想法、难处，如果RD懂产品、执行力高，一般合作很愉快，否则只能看是否能说服。 做到上面的，开发期RD可以踏踏实实的开发，PM等角色辅助支持就好。</description></item><item><title>移动或移不动的互联网</title><link>http://blog.94smart.com/posts/1351/</link><pubDate>Thu, 21 Apr 2011 11:15:43 +0000</pubDate><guid>http://blog.94smart.com/posts/1351/</guid><description>我Blog的副标题是：移动或移不动的互联网，其实这个标题在之前叫“移动或不移动的互联网”，两个字顺序的不同代表我最近2年心态的变化：
2年多前，进入移动互联网行业，那时候大环境还在SP的阴影下，很多互联网产品只考虑PC用户，觉得：手机上的客户端/WAP等产品是SP用来骗钱用的、iPhone是用来装B的等等，那个时候传统互联网是不会移动的。 2年多后，越来越多的热门互联网产品开始移动，彩版、手机版、WAP2.0还是最新的HTML5的怎么叫都好，反正手机要能用，如果你的产品没有iOS或Android版，那你又OUT了，这个时候的互联网只有没法移、移不动的才不移动。 最近被各种人泼冷水，至亲好友、同事、网友等等，反正是各种不看好吧，我只能说就跟互联网刚出来的时候，一样有那么多脏水泼在搜索、电子商务、OICQ上，那又怎么？一样成就百度、阿里、腾讯。
我相信现在只有移不动的互联网，没有不移动的互联网，我比两年前更信仰移动互联网，要坚持下去。
p.s.前两天又手贱，用svn sw方式更新了wordpress的代码，发现各种报错，结果不得以只好重装了一遍，还好数据库和文件还在，顺便换了几个主题，最后选了P2这个主题，很清爽。</description></item><item><title>存档：社区用户的ID、username、昵称等设置</title><link>http://blog.94smart.com/posts/1339/</link><pubDate>Mon, 11 Apr 2011 14:25:56 +0000</pubDate><guid>http://blog.94smart.com/posts/1339/</guid><description>最近泡知乎去了，邀请码真没有，还是去别的地方要吧。
今天回了几个问题，把在知乎回的最长的内容贴出来，姑且算是存档吧。
-&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;ndash;华丽的分割线&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;
问题：Login name、ID、username、昵称，这些东西在社区体系内应该如何设置？（原文链接：http://www.zhihu.com/question/19594426）
描述：一个用户进入社区，目前面临着极为复杂的命名系统。登录名是邮箱，或者是手机号，有的也支持唯一 ID。进入社区，要给自己起一个名字，ID 或者 username。但是，为了便于朋友辨识，又可以起一个允许重名的昵称。这是非常麻烦的事情，谁有比较清楚的思路，可以让中文用户简单地完成注册、起名这件事？
我的回答：
社区的用户系统里需要唯一标识（ID），不管是手机号还是邮箱，为了辨别唯一的用户身份，移动应用可以使用IMEI或手机号（能自动获取更好），WEB应用可以用Email（多数需要再验证），处理得当的情况下可不需密码。 昵称可以有，要去对应唯一标识，但不应该唯一化，就跟身份证上的名字一样，可以有很多人都叫张三，但不能你叫张三后别人只能叫张四，个性化的内容可以体现在昵称上，作为真实性、唯一性的补充可以进行认证，就像新浪微博那种。 username是比较传统的做法，也是现在比较折衷的方法，在没有手机号或邮件验证的条件下，可以用唯一的username来标识用户，但必须配以密码来保护，可直接忽略昵称，让username负担起昵称和唯一标识的作用，但往往不受用户待见，而且安全性可能不高。 数字序号是比较特殊的唯一标识，可以根据用户自动分配，类似于身份证号，用户注册后系统自动分配；也可以是让用户选择，比如腾讯的收费QQ号，这种应该归为特殊的数字username。 社区对ID、昵称等的设置，不管是让用户一步步填的，还是注册时一次性全部填的，还得看社区的定位，比如熟人社区用手机号加真实姓名，网友间网络用Email及网名（可找方法认证），纯生人社区用username且尽量不考虑现实好友和联系关联性。 中文环境下，可以尝试中文昵称做Login Name的方式，可配密码，然后再按社区的定位来让用户补充其他ID相关的资料，比如手机号和Email等。 OPENID、微博帐号和QQ等帐号开放方式，可依赖原有网络环境，如果正好是原有网络的扩展就正合用，否则还得花时间去解释这么做对用户的好处等等。</description></item><item><title>十月底杭州见，UCD年会2010</title><link>http://blog.94smart.com/posts/1328/</link><pubDate>Fri, 08 Oct 2010 09:04:01 +0000</pubDate><guid>http://blog.94smart.com/posts/1328/</guid><description>这个月底，在杭州，第二届UCD年会又要开了，今年的主题是“全民体验”，据小道消息透露业界主要精英都会云集于本届年会，而且嘉宾绝对够份量，又在杭州，真是令人遐（瞎）想呀。 我上届就没能参加，对本届UCD盛会还是非常向往的，只不过这时间紧、任务重的时候，暂时还没把老板绕过去，10月底去不去得了对我自己来说又是个很大的悬念了～ 转发下来自白鸦的消息： “UCD年会”由UCDChina组织，内容围绕互联网产品设计。 2009年11月，UCDChina联合广州美术学院组织了第一届“UCD年会”，反响甚好；2010年10月30日，我们将把第二届“UCD年会”安排在美丽的杭州。众多国内产品设计界草根精英将齐聚一趟，共同探讨互联网产品设计的话题。 诚邀你的光临。 时间：2010.10.30 地点：浙江大学 紫金港校区 主题：全民体验 预计规模：450人以上 详细介绍及日程安排：http://ucdchina.com/club/2010/ （购票窗口已经小范围打开，参加过书友会的同学请联系当地书友会组织者）</description></item><item><title>WAP产品设计：删除确认不能少</title><link>http://blog.94smart.com/posts/1316/</link><pubDate>Sun, 04 Apr 2010 16:43:14 +0000</pubDate><guid>http://blog.94smart.com/posts/1316/</guid><description>引：删除操作要不要再次确认？在WEB设计里，这个问题其实以前很多设计大拿都写过，也有些优化方法，真是各有各的好处。 今天要说的是在WAP产品设计中的状况，前一阵改版站内消息的时候，有一类操作是清空所有消息和删除单条消息，操作比较危险，但其实以前并没仔细考虑过，造成了部分用户的质疑。 状况是这样，我沿用了旧版站内消息的设计：删除/清空不确认直接操作，相信用户已经习惯这种方式，其实旧版就有问题，只不过原来的操作入口不在手机首屏显示，反馈的用户比较少而已。新版里这些操作的链接被往上提了一点，站内信少的用户会在首屏看到这个链接，且有误操作的情况出现。 解决的办法是速度增加了删除/清空的操作确认，用户再次确认才可以完成操作，另外还把这些危险操作用分割线与正常操作区分开，减少用户误操作的可能性，最近用户使用中这类问题就少了很多。 以前曾在Google Reader分享过一个确认页设计的系列，如果重新看一遍可能就会避免这次失误～
确认页设计（confirmation alert）（一）——使用的时机 确认页设计（confirmation alert）（二）——形式的抉择 确认页设计（confirmation alert）（三）——一些注意事项 p.s.这个系列主要是工作中项目的一些教训和经验，能写的我就写，想到哪里就写到哪里。</description></item><item><title>产品团队管理，确实是个问题</title><link>http://blog.94smart.com/posts/1314/</link><pubDate>Fri, 12 Mar 2010 16:52:11 +0000</pubDate><guid>http://blog.94smart.com/posts/1314/</guid><description>今天看了纯银的《产品团队管理经验一枚》，深有同感，同样是转型产品设计，同样是从无到有，还有不少相同的就不一一列举了。 也许N年以后到我离开现在的公司，也可以很好的总结一下管理团队的经验，更多是写给自己，没准节选一些放在Blog上吧。</description></item><item><title>装还是不装，这是问题？</title><link>http://blog.94smart.com/posts/1265/</link><pubDate>Tue, 13 Jan 2009 16:27:49 +0000</pubDate><guid>http://blog.94smart.com/posts/1265/</guid><description>白鸦和Keso最近的火药味很浓，当然，说的是在产品设计上的事：
鸦说：把自己当作一个平凡的用户，不停的用。 Keso说：别装了，你不是用户 鸦又说：装，是必须的
讨论核心是装还是不装，我觉得都对。 做产品不是只有一种方法，装是一种方法，不装是另一种方法，且还有其他方法。 做产品的目的可能会有不同，但好的、成功的产品有很多共同点，比如可用、易用等。 所以，只要可以将产品做好或者达到产品的既定目标，可以通过各种方法，装还是不装都行吧，殊途同归嘛。 最后，管我叫墙头草好了，我希望达到不装的境界，但更希望装的出神入化。</description></item></channel></rss>