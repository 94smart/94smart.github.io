<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>技术相关 on 移或移不动的互联网</title><link>http://blog.94smart.com/tags/%E6%8A%80%E6%9C%AF%E7%9B%B8%E5%85%B3/</link><description>Recent content in 技术相关 on 移或移不动的互联网</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Fri, 26 May 2006 09:15:12 +0000</lastBuildDate><atom:link href="http://blog.94smart.com/tags/%E6%8A%80%E6%9C%AF%E7%9B%B8%E5%85%B3/index.xml" rel="self" type="application/rss+xml"/><item><title>接着讲Flickr的八卦</title><link>http://blog.94smart.com/posts/744/</link><pubDate>Fri, 26 May 2006 09:15:12 +0000</pubDate><guid>http://blog.94smart.com/posts/744/</guid><description>去年七月份因为Flickr的一次当机，了解到他们的程序使用PHP+PEAR开发，还小小的感慨一下。
前两天，顺着DBA的Flickr 的开发者的 Web 应用优化技巧，找到了Cal Henderson写的Serving JavaScript Fast，又让我窥探到Flickr的些些技术内幕，Flickr用的模板居然是SMARTY，这个之前普遍被人诟病的模板系统。
不是说SMARTY不好，而是太好了，更像一种新的语言，我记得当时用PHP的普遍不喜欢语法复杂的SMARTY，嘿嘿，虽然技术不行但我也是其中之一，到现在还在用PHP Template，感觉好像是挺落后的。
不过，通过这篇文章同时也看到，Flickr技术大牛跟我这样的菜鸟有着巨巨巨巨巨……大的差别，就是他们用适合项目的技术，自己去优化程序语言的执行效率，我用对自己来说是简单的代码，效率问题只能听天由命了。
我觉得这好像也从侧面验证了Yahoo收购Flickr的必然，PHP之父在Yahoo，所以Yahoo有经过特别优化的PHP引擎，Flickr人用自己优化的服务器、脚本，同时使用的也是PHP，不知道这样说合适不合适，PHP的应用导致Yahoo一定收购技术相类似的、可以方便接入的Flickr。
So，扯远点说，用PHP的网络应用更容易被Yahoo收购。有人肯定会说：!$#%%$^%&amp;amp;$%&amp;amp;%^$#%%$^%&amp;amp;$%&amp;amp;%^&amp;amp;*&amp;amp;&amp;amp;*$#%%$^%&amp;amp;$%&amp;amp;%^&amp;amp;*&amp;amp;&amp;amp;^*&amp;amp;^*(*
最近就有个改了版的Feedsky，抛弃微软架构及ASP.net，改去拥抱Linux和PHP，快乐，他们快了。
Technorati : Flickr, PHP, SMARTY</description></item><item><title>社区相关 - 社区的信任问题</title><link>http://blog.94smart.com/posts/494/</link><pubDate>Tue, 29 Nov 2005 23:35:37 +0000</pubDate><guid>http://blog.94smart.com/posts/494/</guid><description>标题是这样来的，两三个星期前，写了这个题目，然后存在我机器上Zoundry的草稿里。讽刺的是，今天想写这个内容的时候，发现现在的想法跟两三周前的不太一样了。
两三周前的想法大概是这样：
在一个应用丰富的社区，至少包括BBS、Blog、网摘、Wiki、问答等服务，每个用户都使用其中的几种。信任问题在于该用户资料的真实性，以及该用户提供内容的可信程度。对于以社交为主的社区这些尤为重要。
其实这部分问题还算可以解决，用户资料是可以验证的，比如使用邮箱或手机，再不行还可以学习51.com的做法，使用视频认证，多管齐下，资料的真实性是可以保证的。
对于用户提供的内容，觉得有必要引入一个社区信任度的设定数值，这个值的来源是该用户以往所做动作的评分，比如在问答里面的表现、Blog的内容、BBS的原创帖子等等，用该用户的多个应用来交叉验证，这个其实可以理解为Google的PageRank，值越高越可信。
最近两天听了些其他角度的看法，对社区的信任问题有了新的认识。主要是侧重点的变化，觉得现在的重点在于如何从不可信到可信的转变机制，也就是社区系统怎么来信任用户。
架BBS的朋友都应该知道，遇上专发垃圾（或非法）内容的人很没有办法，因为他们大多数&amp;quot;打一枪换一个地方&amp;quot;，发完就跑，就算封了他们IP也没什么用，但是他们的内容对社区的影响很不好。Blog也差不多，垃圾留言、垃圾Trackback到处都是，让人头疼。Wiki、网摘等等都有类似的问题。
其实缺的是一种机制，一种让系统可以逐渐相信用户的机制，也是用户逐渐融入社区的过程，同时使不被信任的用户不能随心所欲的破坏。比如BBS不允许新注册用户发帖子就是这样的道理。
有个问题也就同时产生了，易用性会受到多大影响？暂时没有想透，继续琢磨中~
Technorati : BBS, 社区</description></item></channel></rss>