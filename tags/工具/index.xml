<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>工具 on 不够智能的网志</title><link>/tags/%E5%B7%A5%E5%85%B7/</link><description>Recent content in 工具 on 不够智能的网志</description><generator>Hugo</generator><language>zh-CN</language><lastBuildDate>Wed, 19 Mar 2008 11:16:59 +0000</lastBuildDate><atom:link href="/tags/%E5%B7%A5%E5%85%B7/index.xml" rel="self" type="application/rss+xml"/><item><title>继续流水账：Wiki和协作、沟通</title><link>/posts/2008/03/1230/</link><pubDate>Wed, 19 Mar 2008 11:16:59 +0000</pubDate><guid>/posts/2008/03/1230/</guid><description>&lt;p>关于Wiki，水是这样流下来的：&lt;/p>
&lt;ol>
&lt;li>前传：对于Wiki和维基百科我是早有了解，05-06年的时候曾经先后用CooCooWakka和MediaWiki在94smart.com架过，基本都是玩两下就放弃了，当时好像是因为编写习惯和权限设置的问题。&lt;/li>
&lt;li>去年11月开始看《维基经济学》，可能是因为个人口味不同，这本书读到今年也没读完，也不打算继续读下去了。&lt;/li>
&lt;li>今年二月底公司开始培训新的内部办公工具（据说是EA内部使用很久的组合方式），其中之一就是用Wiki写工作报告，起先我很不理解曾在twitter上说：&amp;ldquo;有人听说过，用MediaWiki作公司内部报告系统的吗？&amp;quot;，言下之意相当的不屑。&lt;/li>
&lt;li>在看了大BOSS写的快速入门后，在Wiki填充内容，从[[给文档加链接]]开始，起初不适应Wiki代码，网上搜索了很久也没找到合适的所见即所得编辑器，最后只好继续手写代码，还好后来习惯了。&lt;/li>
&lt;li>我们需要把个人简历、联系方式及工作报告都填进去，就现在来看在Wiki里面写简历不是很舒服，所以我在Blog上写了个&lt;a href="http://blog.94smart.com/cache/2008/0311_1228.html">非公司版本的个人简历&lt;/a>。&lt;/li>
&lt;li>起先发现在Wiki里面的图片好像都不直接加外链，多数都是连图片描述页，也许是为了方便其他人补充说明或评论吧。&lt;/li>
&lt;li>Wiki好像不是用来发布纯文本重复内容的工具吧？我认为内部链接才是Wiki的王道，能连接内部内容绝对不考虑外部链接。&lt;/li>
&lt;li>使用Wiki一段时间，其间又看了些Wiki的相关资料，发现之前的部分理解有误，我很想收回之前说过的话，其实用Wiki进行工作报告是有实际意义的。&lt;/li>
&lt;li>公司的内部办公工具主要由内容发布/知识库、邮件、文件版本控制及论坛组成，MediaWiki架设的Wiki主要负责工作记录/报告、内部事项通知、经验分享及岗位培训等内容发布。&lt;/li>
&lt;li>Wiki的优点在于强调文档结构化，在内部关联上处理得很合适，且用户不需了解复杂的代码即可进行超文本内容编写，牺牲了部分灵活换来了相对容易的协作。&lt;/li>
&lt;li>另外，Wiki可以作为Web版的文档版本管理工具，可以比对修改、恢复历史内容等。&lt;/li>
&lt;li>Wiki的文档可以很开放，用来做知识库、新闻、个人资料、通讯录、Blog、Life Stream等都很合适，我现在就用Wiki来做网摘（并用&lt;a href="http://blog.94smart.com/cache/2008/0312_1229.html">ROR&lt;/a>写了一个网摘的Wiki代码生成器）。&lt;/li>
&lt;li>Wiki需要制定现实中的更新规范，比如谁可以编辑这里谁不行之类的。&lt;/li>
&lt;li>最近总是听见公司同事喊：把某某事情写在Wiki里。我觉得Wiki还是作备忘吧，并不能代替直接、实时的沟通。&lt;/li>
&lt;li>其实工具就是工具，不止是Wiki、CVS、SVN这些协作相关的，最后还是需要通过各种形式的直接沟通去解决冲突问题。&lt;/li>
&lt;li>幻想一下，如果在Wiki监视的页面可以通过im提醒就好了，邮件提醒还是比较不及时。&lt;/li>
&lt;li>我开始看好用Wiki进行内部网建设，因为贡献内容的用户可以非常多，基于工作原因大多数人都需要别人更好的协作、配合，所以贡献的内容可以比较靠谱。&lt;/li>
&lt;li>……&lt;/li>
&lt;/ol>
&lt;p>本流水账可以写完，多亏互联网有twitter的存在~ 还好有twitter，让我可以随时把想法发出来，不用憋很久憋成blog，也许憋到后来都忘光了、没感觉了；还要感谢twitter，因为它丢信息不是特别的频繁，让我可以找到之前记下的内容。&lt;/p></description></item><item><title>Prism，WebRunner及WebApp专用浏览器</title><link>/posts/2007/10/1208/</link><pubDate>Tue, 30 Oct 2007 07:16:34 +0000</pubDate><guid>/posts/2007/10/1208/</guid><description>&lt;p>&lt;a href="http://wiki.mozilla.org/WebRunner">&lt;strong>WebRunner&lt;/strong>&lt;/a>，最早是在&lt;a href="http://www.thinknext.net/archives/2032">刀枪Blue&lt;/a>上看到，是个可以把&lt;strong>WebApp&lt;/strong>变成桌面快捷的浏览器工具，说白了就是给网页套一个浏览器的壳，每个WebApp就是一个单独窗口的&lt;strong>专用浏览器&lt;/strong>。 它的核心使用和&lt;strong>Firefox&lt;/strong>一样的&lt;strong>Gecko&lt;/strong>，0.7版已经提供包括Gmail、Google Calendar、Google Docs、Google Groups、Google Analytics、Google Reader、Facebook、Twitter等一堆实用App，除此之外还可以&lt;a href="http://wiki.mozilla.org/WebRunner:Bundle">自制WebApp&lt;/a>（稍微有点繁琐），甚至连&lt;a href="http://starkravingfinkle.org/blog/2007/10/webrunner-app-styling/">界面风格也可以重定义&lt;/a>（但我没有成功~）。 &lt;a href="http://labs.mozilla.com/2007/10/prism/">&lt;img src="http://people.mozilla.com/~faaborg/files/prism/announcement/prismLogo400.png" alt="">&lt;/a> &lt;a href="http://labs.mozilla.com/2007/10/prism/">&lt;strong>Prism&lt;/strong>&lt;/a>是WebRunner进入&lt;strong>Mozllia Labs&lt;/strong>后的正式项目，只要填写简单的信息，就可以很方便的将网站自定义WebApp，而不用像WebRunner那样要经过编辑INI、打包等一系列有些繁琐的过程。 Prism，WebRunner这类WebApp专用浏览器解决了单应用网站的性能优化问题，可以独立存储Cookie等该应用相关数据，并将WebApp封装、桌面化。 Prism和WebRunner的WebApp与桌面程序相比，有好有坏：&lt;/p></description></item><item><title>Microsoft Expression Studio小试加闲扯</title><link>/posts/2007/10/1205/</link><pubDate>Mon, 22 Oct 2007 05:28:48 +0000</pubDate><guid>/posts/2007/10/1205/</guid><description>&lt;p>&lt;a href="http://www.microsoft.com/expression/">&lt;img src="http://www.microsoft.com/expression/images/expression_logo.gif" alt="">&lt;/a> 这件事情再次证明，让反感&lt;strong>微软&lt;/strong>Web环境的人去试用&lt;strong>Expression Studio&lt;/strong>是多么得奇怪。 我试用了Expression Studio部分感兴趣的应用，包括Expression Web、Expression Blend和Expression Design的部分功能，主要是冲着他们对外宣传的Web方面功能，没想到Expression Web和Expression Design如此一般，远不如Photoshop和Dreamweaver，倒是跟Web关系最小的Expression Blend效果还不错。 试用情况说完了，下面来扯一下： 9年前，我以&lt;strong>FrontPage&lt;/strong>开始，对&lt;strong>HTML&lt;/strong>和网站制作进行部分了解，但直到碰上&lt;strong>DreamWeaver&lt;/strong>后，我才认识到FrontPage把我带歪了。 这些年，做网站最顺手的工具莫过于Photoshop和Dreamweaver了，后来他们的所属公司Adobe和Macromedia合并造就了新的Web建设套件：Adobe Creative Suite 3（简称CS3），达成在这个领域的独霸，微软当然不甘心，于是发布整合图形设计、网站制作、动态交互设计等的Expression Studio，但是愿望终归是愿望，我就不太看好他。 我不是微软的Fans，虽对Expression Studio有一定的反感，但还是佩服微软硬撼Adobe的决心，居然耗这么长时间（好多好多年了）开发这个套件，原想微软Fan们也许会喜欢，但我问了几个公司里面的MS铁杆，却都说不看好或不大喜欢的。 但是不可否认，Expression Studio对.Net架构有一定优化，用惯Visual Studio .Net和ASP.net的朋友应该会适应他的UI，在此还是推荐一下。 扯完~&lt;/p></description></item><item><title>Axure RP Pro 4.6的功能又强大不少</title><link>/posts/2007/10/1204/</link><pubDate>Fri, 19 Oct 2007 10:02:28 +0000</pubDate><guid>/posts/2007/10/1204/</guid><description>&lt;p>&lt;a href="http://www.axure.com/">&lt;img src="http://www.axure.com/Images/axurelogo_004.gif" alt="">&lt;/a> 上个月21号&lt;strong>Axure&lt;/strong>发布了Axure RP Pro &lt;strong>4.6.2.946&lt;/strong>，这个版的功能又完善不少，前一阵用4.4版做项目的时候发现几个简单的效果没法实现，昨天装了4.6版，感觉还是不错的。 主要完善了以下实用功能：&lt;/p></description></item></channel></rss>